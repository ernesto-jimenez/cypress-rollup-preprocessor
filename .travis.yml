dist: trusty
language: node_js

node_js:
  - 11

cache:
  directories:
    - node_modules
    - ~/.npm
    - ~/.cache

test_e2e_script: &test_e2e_script
  script:
    - npm run build:ci -- --silent
    - npm run build:serve &
    - npm run cypress:run -- --spec 'cypress/integration/countries/${COUNTRY_NAME}/**/*.spec.js'
    - kill $(jobs -p) || true

jobs:
  include:

    - stage: Tests
      if: NOT commit_message =~ /\[unit skip\]/
      env:
        - UNIT=yes
      before_script:
        - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        - chmod +x ./cc-test-reporter
        - ./cc-test-reporter before-build
      script:
        - npm run test -- --coverage
      after_script:
        - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT

    - stage: Tests
      env:
        - COUNTRY_NAME=argentina
        - E2E=yes
      <<: *test_e2e_script
    - stage: Tests
      env:
        - COUNTRY_NAME=+(brazil|bolivia)
        - E2E=yes
      <<: *test_e2e_script
    - stage: Tests
      env:
        - COUNTRY_NAME=colombia
        - E2E=yes
      <<: *test_e2e_script
    - stage: Tests
      env:
        - COUNTRY_NAME=+(mexico|ecuador)
        - E2E=yes
      <<: *test_e2e_script
    - stage: Tests
      env:
        - COUNTRY_NAME=+(peru|chile)
        - E2E=yes
      <<: *test_e2e_script

    - stage: Deploy Production
      env:
        - ENV=SANDBOX
      if: branch = master
      script:
        - npm run build:sandbox
      before_deploy:
        - pip install --user awscli
      deploy:
        - provider: s3
          access_key_id: $AWS_ACCESS_KEY
          secret_access_key: $AWS_SECRET_ACCESS_KEY
          bucket: $AWS_TECTONICS_SANDBOX_BUCKET
          skip_cleanup: true
          local_dir: build
          on:
            branch: master
          acl: public_read
      after_deploy:
        - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY
        - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
        - aws configure set preview.cloudfront true
        - aws cloudfront create-invalidation --distribution-id $TECTONICS_CLOUDFRONT_ID_SANDBOX --paths "/*"

    - stage: Deploy Production
      env:
        - ENV=PRODUCTION
      if: branch = master
      script:
        - npm run build
      before_deploy:
        - pip install --user awscli
      deploy:
        - provider: s3
          access_key_id: $AWS_ACCESS_KEY
          secret_access_key: $AWS_SECRET_ACCESS_KEY
          bucket: $AWS_TECTONICS_BUCKET
          skip_cleanup: true
          local_dir: build
          on:
            branch: master
          acl: public_read
      after_deploy:
        - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY
        - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
        - aws configure set preview.cloudfront true
        - aws cloudfront create-invalidation --distribution-id $TECTONICS_CLOUDFRONT_ID_PROD --paths "/*"
